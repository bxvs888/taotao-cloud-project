buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.9.4"
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "com.google.protobuf"

dependencies {
    implementation "io.netty:netty-all:4.1.115.Final"
    implementation "com.google.protobuf:protobuf-java:4.28.3"
    implementation "com.google.protobuf:protobuf-java-util:4.28.3"
    implementation "org.apache.thrift:libthrift:0.21.0"
    implementation "io.grpc:grpc-netty:1.68.1"
    implementation "io.grpc:grpc-protobuf:1.68.1"
    implementation "io.grpc:grpc-protobuf:1.68.1"
    implementation "io.grpc:grpc-stub:1.68.1"
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'com.google.guava:guava:33.3.1-jre'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-core:1.5.12'
    implementation 'ch.qos.logback:logback-access:1.5.12'
    implementation 'ch.qos.logback:logback-classic:1.5.12'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.3'

    compileOnly "org.projectlombok:lombok:1.18.36"
    annotationProcessor "org.projectlombok:lombok:1.18.36"
    testCompileOnly "org.projectlombok:lombok:1.18.36"
    testAnnotationProcessor  "org.projectlombok:lombok:1.18.36"
}

protobuf {
    //指定protoc编译器位置 在 protoc 模块下，可以指定多个配置，但是会以最后一个配置为准。
    protoc {
        //https://repo1.maven.org/maven2/com/google/protobuf/protoc/
        //直接使用Maven Central上已经编译好的protoc编译器，
        artifact = "com.google.protobuf:protoc:4.28.3"
        //指定本地已经安装的protoc编译器
        //path = '/usr/local/bin/protoc'
    }
    //generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    //指定protoc运行插件
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.68.1"
        }
        //javalite {
        //    // The codegen for lite comes as a separate artifact
        //    artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.1'
        //}
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

//protobuf {
//    protoc {
//        artifact = "com.google.protobuf:protoc:4.28.3"
//    }
//
//    plugins {
//        grpc {
//            artifact = "io.grpc:protoc-gen-grpc-java:1.68.1"
//        }
//    }
//
//    generateProtoTasks.generatedFilesBaseDir = "src"
//
//    generateProtoTasks {
//        all()*.plugins {
//            grpc {
//                setOutputSubDir "java"
//            }
//        }
//    }
//}
