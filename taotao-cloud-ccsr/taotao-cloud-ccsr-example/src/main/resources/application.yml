server:
  port: 9528
  shutdown: graceful
  http2:
    enabled: true
  undertow:
    buffer-size: 2048 #每块buffer的空间大小,越小的空间被利用越充分，buffer会用于服务器连接的IO操作,类似netty的池化内存管理
    direct-buffers: true # 是否分配的直接内存
    #max-http-post-size: -1B # HTTP POST请求最大的大小
    max-cookies: 200 # 允许的最大 cookie 数量
    max-headers: 100 # 允许的最大请求头数量
    threads:
      io: 16 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      worker: 256 # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    accesslog:
      dir: ${user.home}/logs/${spring.application.name}/undertow # 日志存放目录
      enabled: true # 是否启动日志
      pattern: common # 日志格式
      prefix: "access_log." # 日志文件名前缀
      suffix: log # 日志文件名后缀
  servlet:
    application-display-name: ${spring.application.name}
    #context-path: sys

spring:
  threads:
    virtual:
      #1.Tomcat将使用虚拟线程来处理HTTP请求。这意味着处理Web请求的应用程序代码（例如控制器中的方法）将在虚拟线程上运行。
      #2.调用@Async方法时，SpringMVC的异步请求处理和SpringWebFlux的阻塞执行支持现在将利用虚拟线程
      #3.标记有@Scheduled的方法将在虚拟线程上运行
      enabled: true
  config:
    activate:
      on-profile: dev
  #autoconfigure:
  #  exclude:
  #    - org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticSearchReactiveHealthContributorAutoConfiguration
  lifecycle:
    timeout-per-shutdown-phase: 30s
  thymeleaf:
    mode: HTML
    prefix: classpath:/static/
    suffix: .html
    encoding: UTF-8
    cache: false
    enabled: true
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true
    banner-mode: console
    register-shutdown-hook: true
    web-application-type: servlet
  application:
    name: taotao-cloud-ccsr-example
    admin:
      enabled: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  web:
    resources:
      # pro环境关闭
      add-mappings: true
  mvc:
    servlet:
      load-on-startup: 1
    format:
      date-time: yyyy-MM-dd HH:mm:ss
      date: yyyy-MM-dd
      time: HH:mm:ss
    dispatch-trace-request: true
    dispatch-options-request: true
    log-request-details: true
    log-resolved-exception: true
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 200MB

taotao:
  boot:
    core:
      async:
        enabled: false

mybatis-plus-join:
  banner: true
  sub-table-logic: true

mybatis-plus:
  typeAliasesPackage: com.taotao.cloud.sys.biz.model.entity  #实体扫描 多个package用户逗号或者分号分割
  mapperLocations: classpath:mapper/*.xml # mapper xml 地址
  global-config:
    banner: true # 关闭mp3.0自带的banner
    db-config:
      id-type: auto #主键类型
      table-underline: true  #驼峰下划线转换
      logic-delete-value: 1 #逻辑删除全局值 1已删除
      logic-not-delete-value: 0 #逻辑未删除全局值 0未删除
      insert-strategy: not_null  #字段策略
      update-strategy: not_null  #字段策略
      where-strategy: not_empty  #字段策略
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 日志打印参数class  org.apache.ibatis.logging.slf4j.Slf4jImpl com.taotao.boot.data.mybatis.logging.CustomStdOutImpl
    lazyLoadingEnabled: true  #查询时，关闭关联对象即时加载以提高性能
    aggressiveLazyLoading: false  #设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能
    multipleResultSetsEnabled: true #对于未知的SQL查询，允许返回不同的结果集以达到通用的效果
    useColumnLabel: true #允许使用列标签代替列名
    useGeneratedKeys: true #允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖
    autoMappingBehavior: FULL #给予被嵌套的resultMap以字段-属性的映射支持
    defaultExecutorType: SIMPLE #对于批量更新操作缓存SQL以提高性能
    defaultStatementTimeout: 15  #数据库超过15秒仍未响应则超时，部分语句可单独指定超时时间
    jdbcTypeForNull: NULL
    callSettersOnNulls: true  #当参数为NULL且字段列可为空的Double等类型时可直接当NULL插入
    logPrefix: "dao."  #打印sql语句
  configuration-properties:
    CONSTANT_CIPHER_TEXT: taotao-cloud


management:
  info:
    git:
      mode: simple
    java:
      enabled: true
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: ALWAYS
    shutdown:
      enabled: true
  health:
    mail:
      enabled: false
    elasticsearch:
      enabled: true
    rabbit:
      enabled: true
  zipkin:
    tracing:
      connect-timeout: 1
      read-timeout: 10
      endpoint: http://127.0.0.1:9411/api/v2/spans
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  observations:
    http:
      client:
        requests:
          name: taotao-request-name
      server:
        requests:
          name: taotao-server-name
    key-values:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true
  appoptics:
    metrics:
      export:
        batch-size: 500

logging:
  file:
    name: ${user.home}/logs/${spring.application.name}/${spring.application.name}.all.log
    path: ${user.home}/logs/${spring.application.name}/
  logback:
    rollingpolicy:
      max-file-size: 10GB
      max-history: 30
      clean-history-on-start: true
      total-size-cap: 20GB
  level:
    root: INFO
    '[org.hibernate.SQL]': debug
    # hibernate 6
    '[org.hibernate.orm.jdbc.bind]': trace
    # hibernate 5
    '[org.hibernate.type.descriptor.sql]': trace
    org.apache.zookeeper.ZooKeeper: info
    com.taotao.cloud.sys.api.feign: debug
    net.ttddyy.dsproxy.listener: debug
    net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener: debug
    org.springframework.core.log.LogAccessor: error
    com.alibaba.nacos.common.utils.LoggerUtils: error
    org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer: error
    org.springframework.amqp.rabbit.connection: error
    org.springframework.cloud.stream.binder.rabbit.provisioning.RabbitExchangeQueueProvisioner: error
    org.apache.rocketmq.logging.Slf4jLoggerFactory: error
    org.apache.rocketmq.client.consumer.store: error
    org.apache.kafka.clients.consumer: error
    org.apache.kafka.clients.Metadata: error
    org.apache.kafka.common.utils.AppInfoParser: error
    # hibernate log org.apache.kafka.clients.consumer
    #org.hibernate.SQL: debug
    #org.hibernate.type: info
    #org.hibernate.type.descriptor.sql.BasicBinder: trace
    #org.hibernate.type.descriptor.sql.BasicExtractor: debug
    #org.hibernate.engine.QueryParameters: debug
    #org.hibernate.engine.query.HQLQueryPlan: debug
    # mybatis log
    #com.apache.ibatis: trace
    #java.sql.Connection: debug
    #java.sql.Statement: debug
    #java.sql.PreparedStatement: debug
    # kafka log
    #kafka.server.KafkaConfig: info
    #kafka.admin.AdminClient.AdminConfig: info
    #org.apache.kafka: off
    #org.I0Itec.zkclient: info
    # springframework log
    #org.springframework.cloud.openfeign: debug
    #org.springframework.web: off
    #org.springframework.security: off
    #org.springframework.security.oauth2: off
    #org.springframework.boot.autoconfigure: off
    #org.elasticsearch.client: debug

test:
  baseUrl: https://www.baidu.com

tlog:
  pattern: "$preApp:$preIp:$spanId:$traceId"
  enableInvokeTimePrint: false
  idGenerator: com.taotao.boot.logger.tlog.TlogIdGenerator
  mdcEnable: true

pagehelper:
  helper-dialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

springdoc:
  showActuator: false
  default-flat-param-object: true
  packages-to-exclude:
    - cn.afterturn.easypoi.wps.controller
    - com.taotao.boot.captcha.controller
  #swagger-ui:
  #  path: /swagger-ui.html
  #  tags-sorter: alpha
  #  operations-sorter: alpha
  #api-docs:
  #  path: /v3/api-docs
  #group-configs:
  #  - group: 'default'
  #    paths-to-match: '/**'
  #    packages-to-scan: com.xiaominfo.knife4j.demo.web

knife4j:
  production: false
  enable: true
  basic:
    enable: false
    username: admin
    password: 123456
  cors: false
  documents:
    - group: 1.2.x
      name: 测试自定义标题分组
      locations: classpath:md/*
    - name: 标题2
      locations: classpath:markdown1/*
      group: 用户模块
  setting:
    swagger-model-name: 实体类列表
    enableSwaggerModels: true
    enableDocumentManage: true
    enableHost: false
    enableHostText: http://127.0.0.1:18568
    enableRequestCache: true
    enableFilterMultipartApis: false
    enableFilterMultipartApiMethodType: POST
    language: zh-CN
    enableAfterScript: false
    enableHomeCustom: true
    homeCustomLocation: classpath:test/home.md
    enableFooter: false
    enableFooterCustom: true
    footerCustomContent: 八一菜刀研究中心
    enableSearch: true
    enableDebug: true
    enableOpenApi: true
    enableGroup: true

ccsr:
  rpc-type: grpc     # 客户端与服务端通信协议
  cluster-address:
    - 127.0.0.1:8005 # 服务端集群地址
    - 127.0.0.1:8006
    - 127.0.0.1:8007
#    - 127.0.0.1:8300
  namespace: default # 命名空间


