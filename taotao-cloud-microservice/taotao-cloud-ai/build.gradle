dependencies {
    //cloud
    implementation "io.github.shuigedeng:taotao-cloud-starter-stream"
    implementation "io.github.shuigedeng:taotao-cloud-starter-alibaba"
    implementation "io.github.shuigedeng:taotao-cloud-starter-ttc"
    implementation "io.github.shuigedeng:taotao-cloud-starter-openfeign"

    //boot
    implementation "io.github.shuigedeng:taotao-boot-starter-eventbus"
    implementation "io.github.shuigedeng:taotao-boot-starter-mq-pulsar"
    implementation "io.github.shuigedeng:taotao-boot-starter-mq-rocketmq"
    implementation "io.github.shuigedeng:taotao-boot-starter-mq-kafka"
    implementation "io.github.shuigedeng:taotao-boot-starter-grpc"
    implementation "io.github.shuigedeng:taotao-boot-starter-lock"
    implementation "io.github.shuigedeng:taotao-boot-starter-dingtalk"
    implementation "io.github.shuigedeng:taotao-boot-starter-laytpl"
    implementation "io.github.shuigedeng:taotao-boot-starter-elk"
    implementation "io.github.shuigedeng:taotao-boot-starter-captcha"
    implementation "io.github.shuigedeng:taotao-boot-starter-office"
    implementation "io.github.shuigedeng:taotao-boot-starter-third-client"
    implementation "io.github.shuigedeng:taotao-boot-starter-web"
    implementation "io.github.shuigedeng:taotao-boot-starter-webagg"

    //AVIATOR——轻量级JAVA表达式求值引擎 https://blog.csdn.net/ZhangQingmu/article/details/125087255
    //https://code.google.com/p/aviator/
    //http://code.google.com/p/aviator/wiki/User_Guide_zh
    //https://search.maven.org/artifact/com.googlecode.aviator/aviator
    implementation "com.googlecode.aviator:aviator:5.4.3"

    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java
    implementation "com.google.protobuf:protobuf-java:4.29.2"
    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java-util
    implementation "com.google.protobuf:protobuf-java-util:4.29.2"
    //https://search.maven.org/artifact/com.googlecode.protobuf-java-format/protobuf-java-format
    //implementation "com.googlecode.protobuf-java-format:protobuf-java-format:1.4"

    //https://search.maven.org/artifact/io.protostuff/protostuff-core
    implementation "io.protostuff:protostuff-core:1.8.0"
    //https://search.maven.org/artifact/io.protostuff/protostuff-runtime
    implementation "io.protostuff:protostuff-runtime:1.8.0"

    //https://search.maven.org/artifact/org.apache.velocity/velocity-engine-core
    implementation 'org.apache.velocity:velocity-engine-core:2.4.1'

    //https://search.maven.org/artifact/org.freemarker/freemarker
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'

    implementation 'com.github.oshi:oshi-core:6.6.5'

    //todo更新版本之后没这个了 后面应该会加上  alibaba ai
    //implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-ai'
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter:1.0.0-M3.3"

    //spring ai
    // https://repo.spring.io/milestone    https://repo.spring.io/snapshot
    //使用OpenAI
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    //使用transformers
    implementation 'org.springframework.ai:spring-ai-transformers-spring-boot-starter'
    //使用ollama
    implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
    //redis
    implementation 'org.springframework.ai:spring-ai-redis-store-spring-boot-starter'
    //使用PGVector作为向量数据库
    implementation 'org.springframework.ai:spring-ai-pgvector-store-spring-boot-starter'
    //引入PDF解析器
    implementation 'org.springframework.ai:spring-ai-pdf-document-reader'
    //implementation 'org.springframework.ai:spring-ai-azure-openai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-azure-vector-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-bedrock-ai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-chroma-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-milvus-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-mistral-ai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-neo4j-store-spring-boot-starter'

    //implementation 'org.springframework.ai:spring-ai-pinecone-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-postgresml-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-qdrant-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-stability-ai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-vertex-ai-gemini-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-vertex-ai-palm2-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-weaviate-store-spring-boot-starter'

    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    api "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    api "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

mainClassName = "com.taotao.cloud.ai.TaoTaoCloudAiApplication"
description = "ai中心"
archivesBaseName = 'taotao-cloud-ai'

configurations {
    all {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-data-jpa"
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
        exclude group: "com.querydsl", module: "querydsl-apt"
        exclude group: "commons-logging", module: "commons-logging"
    }
}
